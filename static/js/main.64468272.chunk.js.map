{"version":3,"sources":["api/get/get.js","components/header/form/option/Option.jsx","api/getAllBrandModels.js","api/get/combinedGet.js","api/getAllCars.js","api/postCar.js","components/header/form/Form.jsx","components/header/search/Search.jsx","components/other/button/Button.jsx","components/header/Header.jsx","components/table/row/Row.jsx","components/table/header/TableHeader.jsx","components/table/Table.jsx","api/tableSortLogic.js","components/other/spinner/Spinner.jsx","components/other/modal/Modal.jsx","api/getAllTenantsCars.js","App.js","api/getCarsOnTerritory.js","api/getAllCarBrands.js","api/getAllTenants.js","serviceWorker.js","index.js"],"names":["get","header","api","func","param","console","log","time","Date","now","url","URL","fetch","method","headers","Headers","Accept","then","res","json","result","error","connect","state","dispatch","setInput","value","type","payload","setModels","models","isLoading","setLoading","props","field","options","input","onClickHandler","e","id","target","classList","name","innerHTML","getAllBrandModels","className","data-toggle","aria-haspopup","aria-expanded","map","i","href","onClick","key","combinedGet","api1","api2","a","proxy","Promise","all","response","array1","array2","length","time_in","onTerritoryCars","allCars","forEach","some","element","car","car_territory","getAllCars","postCar","body","carList","modalFunction","JSON","stringify","car_number","car_tenant","brands","tenants","sendCarInfo","setModal","carNumber","placeholder","onKeyUp","data","car_brand","car_model","searchList","setSearchList","toLowerCase","filtered","filter","num","includes","sort","onTerritory","text","btnClass","data-target","aria-controls","mode","isModal","changeModal","info","territoryValue","rowClassname","preventDefault","modalObject","carId","setSortField","headerClassName","reverse","cars","sortedArray","fieldToSort","source","b","sortSourceData","lockerClassname","modal","getParkedCarList","getFilteredCarList","setCarOnTerrytory","closeModal","toLocaleTimeString","days","toLocaleDateString","last_flag","time_out","menu","getCarList","getCarListOnTerritory","setCarBrands","setCarTenants","getAllCarBrands","getAllTenants","Boolean","window","location","hostname","match","initialState","undefined","store","createStore","action","subscribe","ReactDOM","render","getState","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.64468272.chunk.js","sourcesContent":["export default function get(header, api, func, param) {\r\n\tconsole.log(`${header}. Loading start.`)\r\n\tconst time = Date.now()\r\n\r\n\tconst proxy = 'https://cors-anywhere.herokuapp.com/'\r\n\tconst url = new URL('http://80.249.84.47:11000/')\r\n\r\n\tfetch(proxy + url + api, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: new Headers({\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t}),\r\n\t})\r\n\t\t.then(res => {\r\n\t\t\treturn res.json()\r\n\t\t})\r\n\t\t.then(\r\n\t\t\tresult => {\r\n\t\t\t\tfunc(result, param)\r\n\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t`${header}. Loading completed in  ${(Date.now() - time) /\r\n\t\t\t\t\t\t1000} seconds.`,\r\n\t\t\t\t)\r\n\t\t\t},\r\n\r\n\t\t\terror => {\r\n\t\t\t\tconsole.log('Error: ', error)\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t`${header}. Loading completed in  ${(Date.now() - time) /\r\n\t\t\t\t\t\t1000} seconds.`,\r\n\t\t\t\t)\r\n\t\t\t},\r\n\t\t)\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport getAllBrandModels from '../../../../api/getAllBrandModels'\r\n\r\nfunction Option(props) {\r\n\tconst {\r\n\t\tfield,\r\n\t\theader,\r\n\t\toptions,\r\n\t\tinput,\r\n\t\tsetInput,\r\n\t\tsetModels,\r\n\t\tsetLoading,\r\n\t} = props\r\n\r\n\tconst onClickHandler = e => {\r\n\t\tconst id = e.target.classList[1]\r\n\t\tconst name = e.target.innerHTML\r\n\t\tconst result = { ...input, [field]: { id, name } }\r\n\t\tsetInput(result)\r\n\t\tif (field === 'car_brand') {\r\n\t\t\tsetLoading()\r\n\t\t\tgetAllBrandModels(setModels, false, id)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"input-group-prepend\">\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"btn btn-outline-secondary dropdown-toggle\"\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\tdata-toggle=\"dropdown\"\r\n\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\taria-expanded=\"false\"\r\n\t\t\t>\r\n\t\t\t\t{input[field].name || header}\r\n\t\t\t</button>\r\n\t\t\t<div className=\"dropdown-menu\">\r\n\t\t\t\t{options.map(i => (\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\tclassName={`dropdown-item ${i.id}`}\r\n\t\t\t\t\t\thref=\"/#\"\r\n\t\t\t\t\t\tonClick={onClickHandler}\r\n\t\t\t\t\t\tkey={i.id}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{i.name}\r\n\t\t\t\t\t</a>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {}\r\n}\r\nconst mapsDispatchToProps = dispatch => ({\r\n\tsetInput: value => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'SET_INPUT',\r\n\t\t\tpayload: value,\r\n\t\t})\r\n\t},\r\n\tsetModels: (models, isLoading) => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'SET_CAR_MODELS',\r\n\t\t\tpayload: models,\r\n\t\t})\r\n\t\tdispatch({\r\n\t\t\ttype: 'IS_LOADING',\r\n\t\t\tpayload: isLoading,\r\n\t\t})\r\n\t},\r\n\tsetLoading: () => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'IS_LOADING',\r\n\t\t\tpayload: true,\r\n\t\t})\r\n\t},\r\n})\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Option)\r\n","import get from './get/get'\r\n\r\nexport default function getAllBrandModels(func, param, id) {\r\n\tconst api = `api/cars/brands/${id}/`\r\n\tconst header = 'All car models'\r\n\tget(header, api, func, param)\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nexport default async function combinedGet(api1, api2, func, param) {\r\n\tconsole.log('All cars. Loading start.')\r\n\tconst time = Date.now()\r\n\r\n\tconst proxy = 'https://cors-anywhere.herokuapp.com/'\r\n\tconst url = new URL('http://80.249.84.47:11000/')\r\n\r\n\tconst response = await Promise.all([\r\n\t\tfetch(proxy + url + api1, {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: new Headers({\r\n\t\t\t\tAccept: 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t}),\r\n\t\t}),\r\n\t\tfetch(proxy + url + api2, {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: new Headers({\r\n\t\t\t\tAccept: 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t}),\r\n\t\t}),\r\n\t]).then(res => {\r\n\t\tconsole.log(\r\n\t\t\t`All cars. Loading completed in  ${(Date.now() - time) / 1000} seconds.`,\r\n\t\t)\r\n\t\treturn res.map(e => e.json())\r\n\t})\r\n\r\n\tconst array1 = await response[0].then(result => result)\r\n\tconst array2 = await response[1].then(result => result)\r\n\r\n\tlet allCars\r\n\tlet onTerritoryCars\r\n\r\n\t// define arrays\r\n\tif (array1.length && array2.length) {\r\n\t\tif (array1[0].time_in) {\r\n\t\t\tonTerritoryCars = array1\r\n\t\t\tallCars = array2\r\n\t\t} else {\r\n\t\t\tonTerritoryCars = array2\r\n\t\t\tallCars = array1\r\n\t\t}\r\n\t} else if (array1.length) {\r\n\t\tallCars = array1\r\n\t} else {\r\n\t\tallCars = array2\r\n\t}\r\n\r\n\t// combine if needed\r\n\tif (onTerritoryCars) {\r\n\t\tallCars.forEach(i => {\r\n\t\t\tif (onTerritoryCars.some(element => element.car === i.id)) {\r\n\t\t\t\ti.car_territory = true\r\n\t\t\t} else {\r\n\t\t\t\ti.car_territory = false\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\tfunc(allCars, param)\r\n}\r\n","import combinedGet from './get/combinedGet'\r\n\r\nexport default function getAllCars(func, param) {\r\n\tconst api1 = 'api/cars/'\r\n\tconst api2 = 'api/stat/here/'\r\n\tcombinedGet(api1, api2, func, param)\r\n}\r\n","import getAllCars from './getAllCars'\r\n\r\nexport default function postCar(\r\n\tfunc,\r\n\tmethod,\r\n\tapi,\r\n\tbody,\r\n\tcarList,\r\n\tmodalFunction,\r\n) {\r\n\tconsole.log('Loading start.')\r\n\tconst time = Date.now()\r\n\r\n\tconst proxy = 'https://cors-anywhere.herokuapp.com/'\r\n\tconst url = new URL('http://80.249.84.47:11000/')\r\n\r\n\tconsole.log(proxy + url + api)\r\n\r\n\tfetch(proxy + url + api, {\r\n\t\tmethod,\r\n\t\theaders: new Headers({\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t}),\r\n\t\tbody: JSON.stringify(body),\r\n\t})\r\n\t\t.then(res => {\r\n\t\t\treturn res.json()\r\n\t\t})\r\n\t\t.then(\r\n\t\t\tresult => {\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t`Loading completed in  ${(Date.now() - time) / 1000} seconds.`,\r\n\t\t\t\t)\r\n\r\n\t\t\t\t// entering and leaving the parking\r\n\t\t\t\tif (api === 'api/stat/add/') {\r\n\t\t\t\t\t// apply changes to carList locally\r\n\t\t\t\t\tfor (let i = 0; i < carList.length; i++) {\r\n\t\t\t\t\t\tif (carList[i].id === result.car) {\r\n\t\t\t\t\t\t\tcarList[i].car_territory = !carList[i].car_territory\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfunc([], true)\r\n\t\t\t\t\tfunc(carList, false)\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// adding new car cases\r\n\t\t\t\tif (api === 'api/cars/add/') {\r\n\t\t\t\t\t// incorrect car_number case\r\n\t\t\t\t\tif (result.car_number) {\r\n\t\t\t\t\t\tif (result.car_number[0] === 'Это поле обязательно.') {\r\n\t\t\t\t\t\t\tconsole.log('Неверный гос. номер автомобиля')\r\n\t\t\t\t\t\t\tfunc(carList, false)\r\n\t\t\t\t\t\t\tmodalFunction({\r\n\t\t\t\t\t\t\t\tstate: true,\r\n\t\t\t\t\t\t\t\tfield: 'input-modal',\r\n\t\t\t\t\t\t\t\tid: 'Неверный гос. номер автомобиля',\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// repeat request to get all car data\r\n\t\t\t\t\t\t\tgetAllCars(func, false)\r\n\t\t\t\t\t\t\tmodalFunction({\r\n\t\t\t\t\t\t\t\tstate: true,\r\n\t\t\t\t\t\t\t\tfield: 'input-modal',\r\n\t\t\t\t\t\t\t\tid: 'Автомобиль добавлен',\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\tconsole.log('Автомобиль добавлен')\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (result.car_tenant) {\r\n\t\t\t\t\t\tif (result.car_tenant[0] === 'Это поле не может быть null.') {\r\n\t\t\t\t\t\t\tconsole.log('Поле \"Организация\" должно быть заполнено')\r\n\t\t\t\t\t\t\tfunc(carList, false)\r\n\t\t\t\t\t\t\tmodalFunction({\r\n\t\t\t\t\t\t\t\tstate: true,\r\n\t\t\t\t\t\t\t\tfield: 'input-modal',\r\n\t\t\t\t\t\t\t\tid: 'Поле \"Организация\" должно быть заполнено',\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// repeat request to get all car data\r\n\t\t\t\t\t\t\tgetAllCars(func, false)\r\n\t\t\t\t\t\t\tmodalFunction({\r\n\t\t\t\t\t\t\t\tstate: true,\r\n\t\t\t\t\t\t\t\tfield: 'input-modal',\r\n\t\t\t\t\t\t\t\tid: 'Автомобиль добавлен',\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\tconsole.log('Автомобиль добавлен')\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\terror => {\r\n\t\t\t\tfunc(carList, false)\r\n\t\t\t\tconsole.log('Error: ', error)\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t`Loading completed in  ${(Date.now() - time) / 1000} seconds.`,\r\n\t\t\t\t)\r\n\t\t\t},\r\n\t\t)\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Option from './option/Option'\r\nimport postCar from '../../../api/postCar'\r\n\r\nimport './Form.css'\r\n\r\nfunction Form(props) {\r\n\tconst {\r\n\t\tcarList,\r\n\t\tbrands,\r\n\t\tmodels,\r\n\t\ttenants,\r\n\t\tinput,\r\n\t\tsetLoading,\r\n\t\tsetModal,\r\n\t\tsendCarInfo,\r\n\t} = props\r\n\r\n\tlet carNumber\r\n\tconst inputHandler = e => {\r\n\t\tcarNumber = e.target.value\r\n\t\tinput.car_number = e.target.value\r\n\t}\r\n\r\n\tconst sendInfo = () => {\r\n\t\tconst data = {\r\n\t\t\tcar_number: carNumber,\r\n\t\t\tcar_brand: input.car_brand.id,\r\n\t\t\tcar_model: input.car_model.id,\r\n\t\t\tcar_tenant: input.car_tenant.id,\r\n\t\t}\r\n\t\tconst api = 'api/cars/add/'\r\n\t\tsetLoading(true)\r\n\t\tpostCar(sendCarInfo, 'POST', api, data, carList, setModal)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\tid=\"car_number\"\r\n\t\t\t\tplaceholder=\"Гос. номер\"\r\n\t\t\t\tonKeyUp={inputHandler}\r\n\t\t\t/>\r\n\r\n\t\t\t<Option field=\"car_brand\" input={input} options={brands} header=\"Марка\" />\r\n\t\t\t<Option\r\n\t\t\t\tfield=\"car_model\"\r\n\t\t\t\tinput={input}\r\n\t\t\t\toptions={models}\r\n\t\t\t\theader=\"Модель\"\r\n\t\t\t/>\r\n\t\t\t<Option\r\n\t\t\t\tfield=\"car_tenant\"\r\n\t\t\t\tinput={input}\r\n\t\t\t\toptions={tenants}\r\n\t\t\t\theader=\"Организация\"\r\n\t\t\t/>\r\n\r\n\t\t\t<button\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\tclassName=\"btn btn-secondary btn-lg\"\r\n\t\t\t\tonClick={sendInfo}\r\n\t\t\t>\r\n\t\t\t\tДобавить\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tcarList: state.carList,\r\n\t\tbrands: state.brands,\r\n\t\tmodels: state.models,\r\n\t\ttenants: state.tenants,\r\n\t\tinput: state.input,\r\n\t}\r\n}\r\nconst mapsDispatchToProps = dispatch => ({\r\n\tsendCarInfo: (carList, isLoading) => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'GET_CAR_LIST',\r\n\t\t\tpayload: carList,\r\n\t\t})\r\n\t\tdispatch({\r\n\t\t\ttype: 'IS_LOADING',\r\n\t\t\tpayload: isLoading,\r\n\t\t})\r\n\t},\r\n\tsetLoading: () => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'IS_LOADING',\r\n\t\t\tpayload: true,\r\n\t\t})\r\n\t},\r\n\tsetModal: value => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'SET_MODAL',\r\n\t\t\tpayload: value,\r\n\t\t})\r\n\t},\r\n})\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Form)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './Search.css'\r\n\r\nfunction Search(props) {\r\n\tconst { carList, setSearchList } = props\r\n\tconst doSearch = e => {\r\n\t\tconst value = e.target.value.toLowerCase()\r\n\r\n\t\tconst filtered = carList.filter(num => {\r\n\t\t\treturn num.car_number.toLowerCase().includes(value)\r\n\t\t})\r\n\r\n\t\tif (e.target.value.length) {\r\n\t\t\tsetSearchList(filtered)\r\n\t\t} else {\r\n\t\t\tsetSearchList(null)\r\n\t\t}\r\n\t}\r\n\r\n\treturn <input placeholder=\"0000 AA-0\" onKeyUp={doSearch} type=\"text\" />\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tcarList: state.carList,\r\n\t\tsearchList: state.searchList,\r\n\t}\r\n}\r\n\r\nconst mapsDispatchToProps = dispatch => ({\r\n\tsetSearchList: value => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'SET_SEARCH_LIST',\r\n\t\t\tpayload: value,\r\n\t\t})\r\n\t},\r\n})\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Search)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './Button.css'\r\n\r\nfunction Button(props) {\r\n\tconst { target, text, btnClass } = props\r\n\treturn (\r\n\t\t<button\r\n\t\t\tclassName={`btn btn-header btn-secondary btn-lg ${btnClass}`}\r\n\t\t\ttype=\"button\"\r\n\t\t\tdata-toggle=\"collapse\"\r\n\t\t\tdata-target={`#${target}`}\r\n\t\t\taria-expanded=\"false\"\r\n\t\t\taria-controls={target}\r\n\t\t>\r\n\t\t\t{text}\r\n\t\t</button>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tcarList: state.carList,\r\n\t\tsort: state.sort,\r\n\t\tonTerritory: state.onTerritory,\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Button)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Form from './form/Form'\r\nimport Search from './search/Search'\r\nimport Button from '../other/button/Button'\r\nimport './Header.css'\r\n\r\nfunction Header(props) {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col d-flex justify-content-center\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttext=\"Добавить новый автомобиль\"\r\n\t\t\t\t\t\tbtnClass=\"btn-primary\"\r\n\t\t\t\t\t\ttarget=\"input-new-car\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col d-flex justify-content-center\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttext=\"Поиск по гос. номеру\"\r\n\t\t\t\t\t\tbtnClass=\"btn-primary\"\r\n\t\t\t\t\t\ttarget=\"search-car\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t<div className=\"d-flex justify-content-center\">\r\n\t\t\t\t\t\t<div className=\"collapse multi-collapse\" id=\"input-new-car\">\r\n\t\t\t\t\t\t\t<div className=\"card card-body text-white bg-dark mb-3\">\r\n\t\t\t\t\t\t\t\t<Form />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t<div className=\"collapse multi-collapse\" id=\"search-car\">\r\n\t\t\t\t\t\t<div className=\"card card-body text-white bg-dark mb-3\">\r\n\t\t\t\t\t\t\t<Search />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tmode: state.mode,\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header)\r\n","/* eslint-disable camelcase */\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './Row.css'\r\n\r\nfunction Row(props) {\r\n\tconst { info, changeModal } = props\r\n\tconst {\r\n\t\tcar_brand,\r\n\t\tcar_model,\r\n\t\tcar_number,\r\n\t\tcar_tenant,\r\n\t\tcar_territory,\r\n\t\tid,\r\n\t} = info\r\n\tconst territoryValue = car_territory ? 'Да' : 'Нет'\r\n\tconst rowClassname = car_territory ? 'highlighted-row' : 'usual-row'\r\n\tconst filter = e => {\r\n\t\te.preventDefault()\r\n\t\tconst modalObject = {\r\n\t\t\tstate: true,\r\n\t\t\tfield: e.target.className,\r\n\t\t\tvalue: e.target.className === 'tenant' ? car_tenant.name : territoryValue,\r\n\t\t\tid: e.target.className === 'tenant' ? car_tenant.id : null,\r\n\t\t\tcarId: id,\r\n\t\t}\r\n\t\tchangeModal(modalObject)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<tr className={rowClassname}>\r\n\t\t\t\t<td>{car_number}</td>\r\n\t\t\t\t<td>{car_brand ? car_brand.name : null}</td>\r\n\t\t\t\t<td>{car_model ? car_model.name : null}</td>\r\n\t\t\t\t<td onClick={filter} className=\"tenant\">\r\n\t\t\t\t\t{car_tenant.name}\r\n\t\t\t\t</td>\r\n\t\t\t\t<td onClick={filter} className=\"territory\">\r\n\t\t\t\t\t{territoryValue}\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tisModal: state.isModal,\r\n\t}\r\n}\r\n\r\nconst mapsDispatchToProps = dispatch => ({\r\n\tchangeModal: value => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'SET_MODAL',\r\n\t\t\tpayload: value,\r\n\t\t})\r\n\t},\r\n})\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Row)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './TableHeader.css'\r\n\r\nfunction TableHeader(props) {\r\n\tconst { header, sort, setSortField } = props\r\n\tconst optionsList = {\r\n\t\tcar_number: 'Гос. номер',\r\n\t\tcar_brand: 'Марка',\r\n\t\tcar_model: 'Модель',\r\n\t\tcar_tenant: 'Арендатор',\r\n\t\tcar_territory: 'Автомобиль на территории',\r\n\t}\r\n\tlet headerClassName\r\n\tif (sort.field === header) {\r\n\t\theaderClassName = sort.reverse ? 'triangle-up' : 'triangle-down'\r\n\t} else {\r\n\t\theaderClassName = 'triangle-non'\r\n\t}\r\n\r\n\tconst sortHandler = () => {\r\n\t\tif (sort.field !== header) {\r\n\t\t\tsetSortField({ field: header, reverse: false })\r\n\t\t} else {\r\n\t\t\tsetSortField({ field: header, reverse: !sort.reverse })\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<td>\r\n\t\t\t<div className=\"container\" onClick={sortHandler}>\r\n\t\t\t\t<div className=\"header-text\">{optionsList[header]}</div>\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className={headerClassName} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tcarList: state.carList,\r\n\t\tsort: state.sort,\r\n\t}\r\n}\r\nconst mapsDispatchToProps = dispatch => ({\r\n\tsetSortField: field => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'SET_SORT_FIELD',\r\n\t\t\tpayload: field,\r\n\t\t})\r\n\t},\r\n})\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(TableHeader)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Row from './row/Row'\r\nimport TableHeader from './header/TableHeader'\r\nimport './Table.css'\r\nimport sortSourceData from '../../api/tableSortLogic'\r\n\r\nfunction Table(props) {\r\n\tconst { carList, searchList, sort } = props\r\n\r\n\tconst cars = searchList || carList\r\n\r\n\tconst optionsList = [\r\n\t\t'car_number',\r\n\t\t'car_brand',\r\n\t\t'car_model',\r\n\t\t'car_tenant',\r\n\t\t'car_territory',\r\n\t]\r\n\tconst sortedArray = sortSourceData(sort, cars)\r\n\r\n\treturn (\r\n\t\t<table className=\"table table-dark table-hover table-bordered\">\r\n\t\t\t<thead>\r\n\t\t\t\t<tr className=\"table-header\">\r\n\t\t\t\t\t{optionsList.map(e => (\r\n\t\t\t\t\t\t<TableHeader header={e} key={e} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t{cars.length ? sortedArray.map(e => <Row info={e} key={e.id} />) : null}\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tcarList: state.carList,\r\n\t\tsearchList: state.searchList,\r\n\t\tsort: state.sort,\r\n\t\tonTerritory: state.onTerritory,\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Table)\r\n","export default function sortSourceData(fieldToSort, source) {\r\n\tlet sortedArray\r\n\tconst { field, reverse } = fieldToSort\r\n\r\n\tif (field === 'default') {\r\n\t\tsortedArray = source\r\n\t} else {\r\n\t\tsortedArray = source.sort((a, b) => {\r\n\t\t\tif (a[field] === null && b[field] === null) {\r\n\t\t\t\treturn 0\r\n\t\t\t}\r\n\r\n\t\t\tif (a[field] !== null && b[field] === null) {\r\n\t\t\t\treturn -1\r\n\t\t\t}\r\n\r\n\t\t\tif (a[field] === null && b[field] !== null) {\r\n\t\t\t\treturn 1\r\n\t\t\t}\r\n\r\n\t\t\tif (a[field] !== null && b[field] !== null) {\r\n\t\t\t\tif (a[field].name) {\r\n\t\t\t\t\tif (a[field].name > b[field].name) {\r\n\t\t\t\t\t\treturn reverse ? -1 : 1\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (a[field].name < b[field].name) {\r\n\t\t\t\t\t\treturn reverse ? 1 : -1\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 0\r\n\t\t\t\t}\r\n\t\t\t\tif (a[field] > b[field]) {\r\n\t\t\t\t\treturn reverse ? -1 : 1\r\n\t\t\t\t}\r\n\t\t\t\tif (a[field] < b[field]) {\r\n\t\t\t\t\treturn reverse ? 1 : -1\r\n\t\t\t\t}\r\n\t\t\t\treturn 0\r\n\t\t\t}\r\n\t\t\treturn 0\r\n\t\t})\r\n\t}\r\n\treturn sortedArray\r\n}\r\n","/* eslint-disable camelcase */\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './Spinner.css'\r\n\r\nfunction Spinner(props) {\r\n\tconst { isLoading } = props\r\n\tconst lockerClassname = isLoading ? 'LockOn' : 'LockOff'\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? <div className=\"loader\" /> : null}\r\n\t\t\t<div id=\"skm_LockPane\" className={lockerClassname} />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tisLoading: state.isLoading,\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Spinner)\r\n","/* eslint-disable camelcase */\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './Modal.css'\r\nimport getAllTenantsCars from '../../../api/getAllTenantsCars'\r\nimport getAllCars from '../../../api/getAllCars'\r\nimport postCar from '../../../api/postCar'\r\n\r\nfunction Modal(props) {\r\n\tconst {\r\n\t\tmodal,\r\n\t\tcarList,\r\n\t\tcloseModal,\r\n\t\tsetLoading,\r\n\t\tgetFilteredCarList,\r\n\t\tgetParkedCarList,\r\n\t\tsetCarOnTerrytory,\r\n\t} = props\r\n\r\n\tconst api = 'api/stat/add/'\r\n\r\n\tconst setFilter = () => {\r\n\t\tsetLoading(true)\r\n\r\n\t\tif (modal.field === 'tenant') {\r\n\t\t\tgetAllTenantsCars(getFilteredCarList, false, modal.id)\r\n\t\t}\r\n\t\tif (modal.field === 'territory') {\r\n\t\t\tgetAllCars(getParkedCarList, false)\r\n\t\t}\r\n\r\n\t\tcloseModal()\r\n\t}\r\n\tconst resetFilter = () => {\r\n\t\tsetLoading(true)\r\n\t\tgetAllCars(getFilteredCarList, false)\r\n\t\tcloseModal()\r\n\t}\r\n\tconst onTerritory = () => {\r\n\t\tconst body = {\r\n\t\t\ttime_in: new Date().toLocaleTimeString(),\r\n\t\t\tdays: new Date().toLocaleDateString(),\r\n\t\t\tlast_flag: false,\r\n\t\t\tcar: modal.carId,\r\n\t\t}\r\n\r\n\t\tsetLoading(true)\r\n\t\tpostCar(setCarOnTerrytory, 'POST', api, body, carList)\r\n\t\tcloseModal()\r\n\t}\r\n\tconst fromTerritory = () => {\r\n\t\tconst body = {\r\n\t\t\ttime_out: new Date().toLocaleTimeString(),\r\n\t\t\tlast_flag: true,\r\n\t\t\tcar: modal.carId,\r\n\t\t}\r\n\r\n\t\tsetLoading(true)\r\n\t\tpostCar(setCarOnTerrytory, 'PUT', api, body, carList)\r\n\t\tcloseModal()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{modal.state ? (\r\n\t\t\t\t<div id=\"myModal\">\r\n\t\t\t\t\t<div className=\"modal-dialog\">\r\n\t\t\t\t\t\t{modal.field !== 'input-modal' ? (\r\n\t\t\t\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t\t\t\t<div className=\"modal-header\">\r\n\t\t\t\t\t\t\t\t\t<h4 className=\"modal-title\">Фильтр</h4>\r\n\t\t\t\t\t\t\t\t\t<button type=\"button\" className=\"close\" onClick={closeModal}>\r\n\t\t\t\t\t\t\t\t\t\t&times;\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"modal-body\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"container d-flex justify-content-between\">\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={setFilter}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{`Установить фильтр по значению ${modal.value}`}\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-danger\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={resetFilter}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tСбросить фильтр\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t{modal.field === 'territory' ? (\r\n\t\t\t\t\t\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"modal-header\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"modal-title\">Действие с автомобилем</h4>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"modal-body\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"container d-flex justify-content-between\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={onTerritory}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tПрибытиe на парковку\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-danger\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={fromTerritory}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tУбытие с парковки\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t\t\t\t<div className=\"modal-header\">\r\n\t\t\t\t\t\t\t\t\t<h4 className=\"modal-title\">{modal.id}</h4>\r\n\t\t\t\t\t\t\t\t\t<button type=\"button\" className=\"close\" onClick={closeModal}>\r\n\t\t\t\t\t\t\t\t\t\t&times;\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t) : null}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tmodal: state.modal,\r\n\t\tcarList: state.carList,\r\n\t}\r\n}\r\n\r\nconst mapsDispatchToProps = dispatch => ({\r\n\tgetParkedCarList: (carList, isLoading) => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'GET_CAR_LIST',\r\n\t\t\tpayload: carList.filter(e => !!e.car_territory),\r\n\t\t})\r\n\t\tdispatch({\r\n\t\t\ttype: 'IS_LOADING',\r\n\t\t\tpayload: isLoading,\r\n\t\t})\r\n\t},\r\n\tgetFilteredCarList: (carList, isLoading) => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'GET_CAR_LIST',\r\n\t\t\tpayload: carList,\r\n\t\t})\r\n\t\tdispatch({\r\n\t\t\ttype: 'IS_LOADING',\r\n\t\t\tpayload: isLoading,\r\n\t\t})\r\n\t},\r\n\tsetCarOnTerrytory: (carList, isLoading) => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'GET_CAR_LIST',\r\n\t\t\tpayload: carList,\r\n\t\t})\r\n\t\tdispatch({\r\n\t\t\ttype: 'IS_LOADING',\r\n\t\t\tpayload: isLoading,\r\n\t\t})\r\n\t},\r\n\tsetLoading: () => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'IS_LOADING',\r\n\t\t\tpayload: true,\r\n\t\t})\r\n\t},\r\n\tcloseModal: () => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'CLOSE_MODAL',\r\n\t\t\tpayload: false,\r\n\t\t})\r\n\t},\r\n})\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Modal)\r\n","import combinedGet from './get/combinedGet'\r\n\r\nexport default function getAllTetantsCars(func, param, id) {\r\n\tconst api1 = `api/cars/tenant/${id}/`\r\n\tconst api2 = 'api/stat/here/'\r\n\tcombinedGet(api1, api2, func, param)\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Header from './components/header/Header'\r\nimport Table from './components/table/Table'\r\nimport Spinner from './components/other/spinner/Spinner'\r\nimport Modal from './components/other/modal/Modal'\r\nimport './App.css'\r\nimport getAllCars from './api/getAllCars'\r\nimport getCarsOnTerritory from './api/getCarsOnTerritory'\r\nimport getAllCarBrands from './api/getAllCarBrands'\r\nimport getAllTenants from './api/getAllTenants'\r\n\r\nfunction App(props) {\r\n\tconst {\r\n\t\tgetCarList,\r\n\t\tgetCarListOnTerritory,\r\n\t\tsetCarBrands,\r\n\t\tsetCarTenants,\r\n\t} = props\r\n\r\n\tgetAllCars(getCarList, false)\r\n\tgetCarsOnTerritory(getCarListOnTerritory)\r\n\tgetAllCarBrands(setCarBrands)\r\n\tgetAllTenants(setCarTenants)\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<Header />\r\n\t\t\t<Table />\r\n\t\t\t<Spinner />\r\n\t\t\t<Modal />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tmenu: state.menu,\r\n\t}\r\n}\r\nconst mapsDispatchToProps = dispatch => ({\r\n\tgetCarList: (carList, isLoading) => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'GET_CAR_LIST',\r\n\t\t\tpayload: carList,\r\n\t\t})\r\n\t\tdispatch({\r\n\t\t\ttype: 'IS_LOADING',\r\n\t\t\tpayload: isLoading,\r\n\t\t})\r\n\t},\r\n\tgetCarListOnTerritory: carList => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'GET_CARS_ON_TERRITORY',\r\n\t\t\tpayload: carList,\r\n\t\t})\r\n\t},\r\n\tsetCarBrands: value => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'SET_CAR_BRANDS',\r\n\t\t\tpayload: value,\r\n\t\t})\r\n\t},\r\n\tsetCarTenants: value => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'SET_CAR_TENANTS',\r\n\t\t\tpayload: value,\r\n\t\t})\r\n\t},\r\n})\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(App)\r\n","import get from './get/get'\r\n\r\nexport default function getCarsOnTerritory(func, param) {\r\n\tconst api = 'api/stat/here/'\r\n\tconst header = 'Cars on territory'\r\n\tget(header, api, func, param)\r\n}\r\n","import get from './get/get'\r\n\r\nexport default function getAllCarBrands(func, param) {\r\n\tconst api = 'api/cars/brands/'\r\n\tconst header = 'All car brands'\r\n\tget(header, api, func, param)\r\n}\r\n","import get from './get/get'\r\n\r\nexport default function getAllTenants(func, param) {\r\n\tconst api = 'api/tenants/'\r\n\tconst header = 'All tenants'\r\n\tget(header, api, func, param)\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nconst initialState = {\r\n\tcarList: [],\r\n\tsearchList: null,\r\n\tonTerritory: [],\r\n\tmodal: { state: false, field: undefined, id: undefined },\r\n\tsort: { field: 'default', reverse: false },\r\n\tbrands: [],\r\n\tmodels: [],\r\n\ttenants: [],\r\n\tinput: {\r\n\t\tcar_brand: { id: null, name: null },\r\n\t\tcar_model: { id: null, name: null },\r\n\t\tcar_tenant: { id: null, name: null },\r\n\t\tcar_number: '',\r\n\t},\r\n\tisLoading: true,\r\n}\r\n\r\nfunction information(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase 'GET_CAR_LIST':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcarList: action.payload,\r\n\t\t\t}\r\n\t\tcase 'IS_LOADING':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: action.payload,\r\n\t\t\t}\r\n\t\tcase 'SET_SORT_FIELD':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsort: action.payload,\r\n\t\t\t}\r\n\t\tcase 'SET_MODAL':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmodal: action.payload,\r\n\t\t\t}\r\n\t\tcase 'CLOSE_MODAL':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmodal: {\r\n\t\t\t\t\t...state.modal,\r\n\t\t\t\t\tstate: action.payload,\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\tcase 'GET_CARS_ON_TERRITORY':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tonTerritory: action.payload,\r\n\t\t\t}\r\n\t\tcase 'SET_SEARCH_LIST':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsearchList: action.payload,\r\n\t\t\t}\r\n\t\tcase 'SET_CAR_BRANDS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tbrands: action.payload,\r\n\t\t\t}\r\n\t\tcase 'SET_CAR_MODELS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmodels: action.payload,\r\n\t\t\t}\r\n\t\tcase 'SET_CAR_TENANTS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttenants: action.payload,\r\n\t\t\t}\r\n\t\tcase 'SET_INPUT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tinput: action.payload,\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nconst store = createStore(information)\r\nstore.subscribe(() => {})\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App store={store.getState()} />\r\n\t</Provider>,\r\n\tdocument.getElementById('root'),\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}