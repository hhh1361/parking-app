{"version":3,"sources":["components/header/form/Form.jsx","components/other/button/Button.jsx","components/header/Header.jsx","components/table/row/Row.jsx","components/table/header/TableHeader.jsx","components/table/Table.jsx","api/tableSortLogic.js","components/other/spinner/Spinner.jsx","api/get/combinedGet.js","api/getAllCars.js","components/other/modal/Modal.jsx","api/getAllTenantsCars.js","App.js","serviceWorker.js","index.js"],"names":["connect","state","carList","sort","onTerritory","props","className","target","text","btnClass","type","data-toggle","data-target","aria-expanded","aria-controls","mode","id","isModal","dispatch","changeModal","value","payload","info","car_brand","car_model","car_number","car_tenant","car_territory","filter","e","preventDefault","modalObject","field","name","onClick","setSortField","headerClassName","header","reverse","sortedArray","fieldToSort","source","a","b","sortSourceData","console","log","map","key","length","isLoading","combinedGet","api1","api2","func","param","time","Date","now","proxy","url","URL","Promise","all","fetch","method","headers","Headers","Accept","then","res","json","response","result","array1","array2","time_in","onTerritoryCars","allCars","forEach","i","some","element","getAllCars","modal","getParkedCarList","getFilteredCarList","setLoading","closeModal","menu","getCarList","getCarListOnTerritory","Boolean","window","location","hostname","match","initialState","undefined","store","createStore","action","information","select","timezone","subscribe","ReactDOM","render","getState","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.987f744a.chunk.js","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport './Form.css'\r\n\r\nfunction Form(props) {\r\n\treturn <div className=\"container\">something</div>\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tcarList: state.carList,\r\n\t\tsort: state.sort,\r\n\t\tonTerritory: state.onTerritory,\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Form)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction Button(props) {\r\n\tconst { target, text, btnClass } = props\r\n\treturn (\r\n\t\t<button\r\n\t\t\tclassName={`btn ${btnClass}`}\r\n\t\t\ttype=\"button\"\r\n\t\t\tdata-toggle=\"collapse\"\r\n\t\t\tdata-target={`#${target}`}\r\n\t\t\taria-expanded=\"false\"\r\n\t\t\taria-controls={target}\r\n\t\t>\r\n\t\t\t{text}\r\n\t\t</button>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tcarList: state.carList,\r\n\t\tsort: state.sort,\r\n\t\tonTerritory: state.onTerritory,\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Button)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Form from './form/Form'\r\nimport Button from '../other/button/Button'\r\nimport './Header.css'\r\n\r\nfunction Header(props) {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col d-flex justify-content-center\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttext=\"Добавить новый автомобиль\"\r\n\t\t\t\t\t\t\tbtnClass=\"btn-primary\"\r\n\t\t\t\t\t\t\ttarget=\"multiCollapseExample1\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col d-flex justify-content-center\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttext=\"Поиск по гос. номеру\"\r\n\t\t\t\t\t\t\tbtnClass=\"btn-primary\"\r\n\t\t\t\t\t\t\ttarget=\"multiCollapseExample2\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"collapse multi-collapse\" id=\"multiCollapseExample1\">\r\n\t\t\t\t\t\t\t<div className=\"card card-body\">\r\n\t\t\t\t\t\t\t\t<Form />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"collapse multi-collapse\" id=\"multiCollapseExample2\">\r\n\t\t\t\t\t\t\t<div className=\"card card-body\">\r\n\t\t\t\t\t\t\t\t<Form />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tmode: state.mode,\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header)\r\n","/* eslint-disable camelcase */\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction Row(props) {\r\n\tconst { info, changeModal } = props\r\n\tconst { car_brand, car_model, car_number, car_tenant, car_territory } = info\r\n\tconst filter = e => {\r\n\t\te.preventDefault()\r\n\t\tconst modalObject = {\r\n\t\t\tstate: true,\r\n\t\t\tfield: e.target.className,\r\n\t\t\tvalue: e.target.className === 'tenant' ? car_tenant.name : car_territory,\r\n\t\t\tid: e.target.className === 'tenant' ? car_tenant.id : null,\r\n\t\t}\r\n\t\tchangeModal(modalObject)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<tr>\r\n\t\t\t\t<td>{car_number}</td>\r\n\t\t\t\t<td>{car_brand ? car_brand.name : null}</td>\r\n\t\t\t\t<td>{car_model ? car_model.name : null}</td>\r\n\t\t\t\t<td onClick={filter} className=\"tenant\">\r\n\t\t\t\t\t{car_tenant.name}\r\n\t\t\t\t</td>\r\n\t\t\t\t<td onClick={filter} className=\"territory\">\r\n\t\t\t\t\t{car_territory ? 'тут' : '-'}\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tisModal: state.isModal,\r\n\t}\r\n}\r\n\r\nconst mapsDispatchToProps = dispatch => ({\r\n\tchangeModal: value => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'SET_MODAL',\r\n\t\t\tpayload: value,\r\n\t\t})\r\n\t},\r\n})\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Row)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './TableHeader.css'\r\n\r\nfunction TableHeader(props) {\r\n\tconst { header, sort, setSortField } = props\r\n\tconst optionsList = {\r\n\t\tcar_number: 'Гос. номер',\r\n\t\tcar_brand: 'Марка',\r\n\t\tcar_model: 'Модель',\r\n\t\tcar_tenant: 'Арендатор',\r\n\t\tcar_territory: 'что-то',\r\n\t}\r\n\tlet headerClassName\r\n\tif (sort.field === header) {\r\n\t\theaderClassName = sort.reverse ? 'triangle-up' : 'triangle-down'\r\n\t} else {\r\n\t\theaderClassName = 'triangle-non'\r\n\t}\r\n\r\n\tconst sortHandler = () => {\r\n\t\tif (sort.field !== header) {\r\n\t\t\tsetSortField({ field: header, reverse: false })\r\n\t\t} else {\r\n\t\t\tsetSortField({ field: header, reverse: !sort.reverse })\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<td>\r\n\t\t\t<div className=\"container\" onClick={sortHandler}>\r\n\t\t\t\t<div className=\"header-text\">{optionsList[header]}</div>\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className={headerClassName} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tcarList: state.carList,\r\n\t\tsort: state.sort,\r\n\t}\r\n}\r\nconst mapsDispatchToProps = dispatch => ({\r\n\tsetSortField: field => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'SET_SORT_FIELD',\r\n\t\t\tpayload: field,\r\n\t\t})\r\n\t},\r\n})\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(TableHeader)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Row from './row/Row'\r\nimport TableHeader from './header/TableHeader'\r\nimport './Table.css'\r\nimport sortSourceData from '../../api/tableSortLogic'\r\n\r\nfunction Table(props) {\r\n\tconst { carList, sort, onTerritory } = props\r\n\tconst optionsList = [\r\n\t\t'car_number',\r\n\t\t'car_brand',\r\n\t\t'car_model',\r\n\t\t'car_tenant',\r\n\t\t'car_territory',\r\n\t]\r\n\tconst sortedArray = sortSourceData(sort, carList)\r\n\r\n\tconsole.log('Rerender Table', onTerritory)\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<table className=\"table table-dark table-hover\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t{optionsList.map(e => (\r\n\t\t\t\t\t\t\t<TableHeader header={e} key={e} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{carList.length\r\n\t\t\t\t\t\t? sortedArray.map(e => <Row info={e} key={e.id} />)\r\n\t\t\t\t\t\t: null}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tcarList: state.carList,\r\n\t\tsort: state.sort,\r\n\t\tonTerritory: state.onTerritory,\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Table)\r\n","export default function sortSourceData(fieldToSort, source) {\r\n\tlet sortedArray\r\n\tconst { field, reverse } = fieldToSort\r\n\r\n\tif (field === 'default') {\r\n\t\tsortedArray = source\r\n\t} else {\r\n\t\tsortedArray = source.sort((a, b) => {\r\n\t\t\tif (a[field] === null && b[field] === null) {\r\n\t\t\t\treturn 0\r\n\t\t\t}\r\n\r\n\t\t\tif (a[field] !== null && b[field] === null) {\r\n\t\t\t\treturn -1\r\n\t\t\t}\r\n\r\n\t\t\tif (a[field] === null && b[field] !== null) {\r\n\t\t\t\treturn 1\r\n\t\t\t}\r\n\r\n\t\t\tif (a[field] !== null && b[field] !== null) {\r\n\t\t\t\tif (a[field].name) {\r\n\t\t\t\t\tif (a[field].name > b[field].name) {\r\n\t\t\t\t\t\treturn reverse ? -1 : 1\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (a[field].name < b[field].name) {\r\n\t\t\t\t\t\treturn reverse ? 1 : -1\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 0\r\n\t\t\t\t}\r\n\t\t\t\tif (a[field] > b[field]) {\r\n\t\t\t\t\treturn reverse ? -1 : 1\r\n\t\t\t\t}\r\n\t\t\t\tif (a[field] < b[field]) {\r\n\t\t\t\t\treturn reverse ? 1 : -1\r\n\t\t\t\t}\r\n\t\t\t\treturn 0\r\n\t\t\t}\r\n\t\t\treturn 0\r\n\t\t})\r\n\t}\r\n\treturn sortedArray\r\n}\r\n","/* eslint-disable camelcase */\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './Spinner.css'\r\n\r\nfunction Spinner(props) {\r\n\tconst { isLoading } = props\r\n\r\n\treturn <>{isLoading ? <div className=\"loader\" /> : null}</>\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tisLoading: state.isLoading,\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Spinner)\r\n","/* eslint-disable no-param-reassign */\r\nexport default async function combinedGet(api1, api2, func, param) {\r\n\tconsole.log('Loading start.')\r\n\tconst time = Date.now()\r\n\r\n\tconst proxy = 'https://cors-anywhere.herokuapp.com/'\r\n\tconst url = new URL('http://80.249.84.47:11000/')\r\n\r\n\tconst response = await Promise.all([\r\n\t\tfetch(proxy + url + api1, {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: new Headers({\r\n\t\t\t\tAccept: 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t}),\r\n\t\t}),\r\n\t\tfetch(proxy + url + api2, {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: new Headers({\r\n\t\t\t\tAccept: 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t}),\r\n\t\t}),\r\n\t]).then(res => {\r\n\t\tconsole.log(`Loading completed in  ${(Date.now() - time) / 1000} seconds.`)\r\n\t\treturn res.map(e => e.json())\r\n\t})\r\n\r\n\tconst array1 = await response[0].then(result => result)\r\n\tconst array2 = await response[1].then(result => result)\r\n\r\n\tlet allCars\r\n\tlet onTerritoryCars\r\n\r\n\t// define arrays\r\n\tif (array1.length && array2.length) {\r\n\t\tif (array1[0].time_in) {\r\n\t\t\tonTerritoryCars = array1\r\n\t\t\tallCars = array2\r\n\t\t} else {\r\n\t\t\tonTerritoryCars = array2\r\n\t\t\tallCars = array1\r\n\t\t}\r\n\t} else if (array1.length) {\r\n\t\tallCars = array1\r\n\t} else {\r\n\t\tallCars = array2\r\n\t}\r\n\r\n\tconsole.log(allCars)\r\n\tconsole.log(onTerritoryCars)\r\n\r\n\t// combine if needed\r\n\tif (onTerritoryCars) {\r\n\t\tallCars.forEach(i => {\r\n\t\t\tif (onTerritoryCars.some(element => element.id === i.id)) {\r\n\t\t\t\ti.car_territory = true\r\n\t\t\t} else {\r\n\t\t\t\ti.car_territory = false\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tfunc(allCars, param)\r\n}\r\n","import combinedGet from './get/combinedGet'\r\n\r\nexport default function getAllCars(func, param) {\r\n\tconst api1 = 'api/cars/'\r\n\tconst api2 = 'api/stat/here/'\r\n\tcombinedGet(api1, api2, func, param)\r\n}\r\n","/* eslint-disable camelcase */\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './Modal.css'\r\nimport getAllTenantsCars from '../../../api/getAllTenantsCars'\r\nimport getAllCars from '../../../api/getAllCars'\r\n\r\nfunction Modal(props) {\r\n\tconst {\r\n\t\tmodal,\r\n\t\tcloseModal,\r\n\t\tsetLoading,\r\n\t\tgetFilteredCarList,\r\n\t\tgetParkedCarList,\r\n\t} = props\r\n\r\n\tconst setFilter = () => {\r\n\t\tsetLoading(true)\r\n\r\n\t\tif (modal.field === 'tenant') {\r\n\t\t\tgetAllTenantsCars(getFilteredCarList, false, modal.id)\r\n\t\t}\r\n\t\tif (modal.field === 'territory') {\r\n\t\t\tgetAllCars(getParkedCarList, false)\r\n\t\t}\r\n\r\n\t\tcloseModal()\r\n\t}\r\n\tconst resetFilter = () => {\r\n\t\tsetLoading(true)\r\n\t\tgetAllCars(getFilteredCarList, false)\r\n\t\tcloseModal()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{modal.state ? (\r\n\t\t\t\t<div id=\"myModal\">\r\n\t\t\t\t\t<div className=\"modal-dialog\">\r\n\t\t\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t\t\t<div className=\"modal-header\">\r\n\t\t\t\t\t\t\t\t<h4 className=\"modal-title\">Фильтр</h4>\r\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"close\" onClick={closeModal}>\r\n\t\t\t\t\t\t\t\t\t&times;\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"modal-body\">\r\n\t\t\t\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={setFilter}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{`Установить фильтр по значению ${modal.value}`}\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-danger\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={resetFilter}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tСбросить фильтр\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t) : null}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tmodal: state.modal,\r\n\t}\r\n}\r\n\r\nconst mapsDispatchToProps = dispatch => ({\r\n\tgetParkedCarList: (carList, isLoading) => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'GET_CAR_LIST',\r\n\t\t\tpayload: carList.filter(e => !!e.car_territory),\r\n\t\t})\r\n\t\tdispatch({\r\n\t\t\ttype: 'IS_LOADING',\r\n\t\t\tpayload: isLoading,\r\n\t\t})\r\n\t},\r\n\tgetFilteredCarList: (carList, isLoading) => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'GET_CAR_LIST',\r\n\t\t\tpayload: carList,\r\n\t\t})\r\n\t\tdispatch({\r\n\t\t\ttype: 'IS_LOADING',\r\n\t\t\tpayload: isLoading,\r\n\t\t})\r\n\t},\r\n\tsetLoading: () => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'IS_LOADING',\r\n\t\t\tpayload: true,\r\n\t\t})\r\n\t},\r\n\tcloseModal: () => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'CLOSE_MODAL',\r\n\t\t\tpayload: false,\r\n\t\t})\r\n\t},\r\n})\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Modal)\r\n","import combinedGet from './get/combinedGet'\r\n\r\nexport default function getAllTetantsCars(func, param, id) {\r\n\tconst api1 = `api/cars/tenant/${id}/`\r\n\tconst api2 = 'api/stat/here/'\r\n\tcombinedGet(api1, api2, func, param)\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Header from './components/header/Header'\r\nimport Table from './components/table/Table'\r\nimport Spinner from './components/other/spinner/Spinner'\r\nimport Modal from './components/other/modal/Modal'\r\nimport Form from './components/header/form/Form'\r\nimport './App.css'\r\nimport getAllCars from './api/getAllCars'\r\nimport getCarsOnTerritory from './api/getCarsOnTerritory'\r\n\r\nfunction App(props) {\r\n\tconst { getCarList, getCarListOnTerritory } = props\r\n\r\n\tgetAllCars(getCarList, false)\r\n\t// getCarsOnTerritory(getCarListOnTerritory)\r\n\r\n\t// const addCar = () => {\r\n\t// \tconsole.log('Start fetch')\r\n\t// \tconst proxy = 'https://cors-anywhere.herokuapp.com/'\r\n\t// \tconst url = new URL('http://80.249.84.47:11000/')\r\n\t// \tconst api = 'api/cars/add/'\r\n\t// \tconst info = {\r\n\t// \t\tnumber: '5528 АА-7',\r\n\t// \t\tbrand: 'id',\r\n\t// \t\tmodel: 'id',\r\n\t// \t\ttenant: 'id',\r\n\t// \t}\r\n\r\n\t// \tfetch(proxy + url + api, {\r\n\t// \t\tmethod: 'POST',\r\n\t// \t\theaders: new Headers({\r\n\t// \t\t\t'Content-Type': 'application/json',\r\n\t// \t\t}),\r\n\t// \t\tbody: JSON.stringify(info),\r\n\t// \t})\r\n\t// \t\t.then(res => {\r\n\t// \t\t\tconsole.log('Response: ', res)\r\n\t// \t\t\treturn res.json()\r\n\t// \t\t})\r\n\t// \t\t.then(\r\n\t// \t\t\tresult => {\r\n\t// \t\t\t\tconsole.log('Result: ', result)\r\n\t// \t\t\t},\r\n\r\n\t// \t\t\terror => {\r\n\t// \t\t\t\tconsole.log('Error: ', error)\r\n\t// \t\t\t},\r\n\t// \t\t)\r\n\t// }\r\n\r\n\t// function addStat() {\r\n\t// \tconsole.log('Start fetch')\r\n\t// \tconst proxy = 'https://cors-anywhere.herokuapp.com/'\r\n\t// \tconst url = new URL('http://80.249.84.47:11000/')\r\n\t// \tconst api = 'api/stat/add/'\r\n\t// \tconst info = {\r\n\t// \t\ttime_in: '15:54:48',\r\n\t// \t\tdays: '08.05.2020',\r\n\t// \t\tlast_flag: false,\r\n\t// \t\tcar: 17,\r\n\t// \t}\r\n\r\n\t// \tfetch(proxy + url + api, {\r\n\t// \t\tmethod: 'POST',\r\n\t// \t\theaders: new Headers({\r\n\t// \t\t\t'Content-Type': 'application/json',\r\n\t// \t\t}),\r\n\t// \t\tbody: JSON.stringify(info),\r\n\t// \t})\r\n\t// \t\t.then(res => {\r\n\t// \t\t\tconsole.log('Response: ', res)\r\n\t// \t\t\treturn res.json()\r\n\t// \t\t})\r\n\t// \t\t.then(\r\n\t// \t\t\tresult => {\r\n\t// \t\t\t\tconsole.log('Result: ', result)\r\n\t// \t\t\t},\r\n\r\n\t// \t\t\terror => {\r\n\t// \t\t\t\tconsole.log('Error: ', error)\r\n\t// \t\t\t},\r\n\t// \t\t)\r\n\t// }\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Header />\r\n\r\n\t\t\t<Table />\r\n\r\n\t\t\t<Spinner />\r\n\t\t\t<Modal />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tmenu: state.menu,\r\n\t}\r\n}\r\nconst mapsDispatchToProps = dispatch => ({\r\n\tgetCarList: (carList, isLoading) => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'GET_CAR_LIST',\r\n\t\t\tpayload: carList,\r\n\t\t})\r\n\t\tdispatch({\r\n\t\t\ttype: 'IS_LOADING',\r\n\t\t\tpayload: isLoading,\r\n\t\t})\r\n\t},\r\n\tgetCarListOnTerritory: carList => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'GET_CARS_ON_TERRITORY',\r\n\t\t\tpayload: carList,\r\n\t\t})\r\n\t},\r\n})\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(App)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nconst initialState = {\r\n\tcarList: [],\r\n\tisLoading: true,\r\n\tmodal: { state: false, field: undefined, id: undefined },\r\n\tsort: { field: 'default', reverse: false },\r\n\tonTerritory: [],\r\n}\r\n\r\nfunction information(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase 'GET_CAR_LIST':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcarList: action.payload,\r\n\t\t\t}\r\n\t\tcase 'IS_LOADING':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: action.payload,\r\n\t\t\t}\r\n\t\tcase 'SET_SORT_FIELD':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsort: action.payload,\r\n\t\t\t}\r\n\t\tcase 'SET_MODAL':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmodal: action.payload,\r\n\t\t\t}\r\n\t\tcase 'CLOSE_MODAL':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmodal: {\r\n\t\t\t\t\t...state.modal,\r\n\t\t\t\t\tstate: action.payload,\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\tcase 'GET_CARS_ON_TERRITORY':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tonTerritory: action.payload,\r\n\t\t\t}\r\n\t\tcase 'ADD_TIMEZONE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tinformation: {\r\n\t\t\t\t\t...state.information,\r\n\t\t\t\t\tselect: { ...state.information.select, timezone: action.payload },\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nconst store = createStore(information)\r\nstore.subscribe(() => {})\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App store={store.getState()} />\r\n\t</Provider>,\r\n\tdocument.getElementById('root'),\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}